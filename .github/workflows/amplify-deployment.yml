name: Amplify Deployment Status

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to check'
        required: true
        default: 'sandbox'
        type: choice
        options:
        - sandbox
        - production

env:
  AWS_REGION: us-east-1

jobs:
  check-amplify-status:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Check Amplify App Status
        run: |
          echo "üîç Verificando estado de Amplify para ${{ github.event.inputs.environment }}..."
          
          # Obtener informaci√≥n de la app de Amplify
          APP_ID="d3ts6pwgn7uyyh"
          
          echo "üì± Informaci√≥n de la aplicaci√≥n Amplify:"
          aws amplify get-app --app-id $APP_ID --query 'app.{Name:name,Platform:platform,Repository:repository}' --output table
          
          echo ""
          echo "üåø Informaci√≥n de las ramas:"
          aws amplify list-branches --app-id $APP_ID --query 'branches[].{Branch:branchName,Status:status,Environment:environment}' --output table
          
          echo ""
          echo "üöÄ √öltimos despliegues:"
          aws amplify list-jobs --app-id $APP_ID --max-results 5 --query 'jobSummaries[].{JobId:jobId,Status:status,StartTime:startTime,Branch:branchName}' --output table

      - name: Check Environment URLs
        run: |
          echo "üîó URLs de los entornos:"
          echo "  - Sandbox: https://sandbox.d3ts6pwgn7uyyh.amplifyapp.com"
          echo "  - Production: https://production.d3ts6pwgn7uyyh.amplifyapp.com"
          echo ""
          echo "üìã Para verificar el estado:"
          echo "  1. Ve a la consola de AWS Amplify"
          echo "  2. Selecciona la aplicaci√≥n onPointAdmin"
          echo "  3. Revisa el estado de las ramas y despliegues"

      - name: Test Environment Health
        run: |
          ENVIRONMENT=${{ github.event.inputs.environment }}
          if [ "$ENVIRONMENT" = "sandbox" ]; then
            URL="https://sandbox.d3ts6pwgn7uyyh.amplifyapp.com"
          else
            URL="https://production.d3ts6pwgn7uyyh.amplifyapp.com"
          fi
          
          echo "üè• Probando salud del entorno $ENVIRONMENT..."
          echo "üîó URL: $URL"
          
          # Test b√°sico de conectividad
          if curl -s --head "$URL" | head -n 1 | grep -q "200 OK"; then
            echo "‚úÖ El entorno $ENVIRONMENT est√° respondiendo correctamente"
          else
            echo "‚ö†Ô∏è El entorno $ENVIRONMENT no est√° respondiendo o hay problemas"
          fi

  notify-status:
    runs-on: ubuntu-latest
    needs: check-amplify-status
    if: always()
    steps:
      - name: Notify Amplify Status
        run: |
          echo "üîî Estado de Amplify para ${{ github.event.inputs.environment }}:"
          echo "  - Verificaci√≥n: ${{ needs.check-amplify-status.result }}"
          echo "  - Timestamp: $(date)"
          echo ""
          echo "üìã Para m√°s detalles, revisa la consola de AWS Amplify"
