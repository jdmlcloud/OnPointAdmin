name: Develop to Sandbox Integration

on:
  push:
    branches: [ develop ]
  workflow_dispatch:
    inputs:
      feature:
        description: 'Feature being deployed'
        required: true
        type: string

env:
  NODE_VERSION: '18'
  AWS_REGION: us-east-1

jobs:
  validate-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security checks
        run: |
          echo "🔍 Ejecutando verificaciones de seguridad..."
          npm audit --audit-level moderate

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run tests
        run: npm run test

      - name: Build application
        run: npm run build

  create-sandbox-pr:
    runs-on: ubuntu-latest
    needs: validate-and-test
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request to Sandbox
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: .
          base: sandbox
          head: develop
          title: "🚀 Deploy develop to sandbox - ${{ github.event.head_commit.message }}"
          body: |
            ## 🚀 Deploy from Develop to Sandbox
            
            **Feature:** ${{ github.event.inputs.feature || 'Auto-deploy from develop' }}
            **Source:** develop
            **Target:** sandbox
            
            ### 📋 Changes included:
            - Latest changes from develop branch
            - Security and quality checks passed
            - Ready for sandbox testing
            
            ### ✅ Pre-deployment checks:
            - [x] Security audit passed
            - [x] Linting passed
            - [x] Type checking passed
            - [x] Tests passed
            - [x] Build successful
            
            ### 🧪 Next steps:
            1. Review changes
            2. Merge to sandbox
            3. Test in sandbox environment
            4. Create PR to production if tests pass
            
            **Auto-generated by GitHub Actions**
          labels: |
            deployment
            sandbox
            auto-generated
          assignees: ${{ github.actor }}

  deploy-to-sandbox:
    runs-on: ubuntu-latest
    needs: [validate-and-test, create-sandbox-pr]
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Configure AWS credentials for Sandbox
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_SANDBOX }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SANDBOX }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy Lambda functions to Sandbox
        run: |
          echo "🚀 Desplegando Lambda functions a sandbox..."
          chmod +x scripts/deploy-lambda-functions.sh
          ./scripts/deploy-lambda-functions.sh sandbox

      - name: Update API Gateway Sandbox
        run: |
          echo "🌐 Actualizando API Gateway sandbox..."
          chmod +x scripts/setup-api-gateway-sandbox.sh
          ./scripts/setup-api-gateway-sandbox.sh

      - name: Deploy frontend to Sandbox (Amplify)
        run: |
          echo "📦 Desplegando frontend a sandbox (Amplify)..."
          echo "✅ El despliegue a sandbox se maneja automáticamente por AWS Amplify"
          echo "🔗 URL: https://sandbox.d3ts6pwgn7uyyh.amplifyapp.com"
          echo "📋 Verifica el estado en la consola de Amplify"

      - name: Run health checks
        run: |
          echo "🏥 Ejecutando health checks en sandbox..."
          chmod +x scripts/run-health-checks.sh
          ./scripts/run-health-checks.sh sandbox

  notify-deployment:
    runs-on: ubuntu-latest
    needs: [deploy-to-sandbox]
    if: always()
    steps:
      - name: Notify deployment status
        run: |
          echo "🔔 Notificando estado del despliegue..."
          if [ "${{ needs.deploy-to-sandbox.result }}" == "success" ]; then
            echo "✅ Despliegue a sandbox completado exitosamente"
            echo "🧪 Aplicación lista para pruebas en sandbox"
            echo "🔗 URL: https://sandbox.d3ts6pwgn7uyyh.amplifyapp.com"
          else
            echo "❌ Despliegue a sandbox falló"
            echo "🔧 Revisa los logs para más detalles"
          fi
